<Window x:Class="IndraDeMesmaeker.NotitieBeheer.App.Views.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IndraDeMesmaeker.NotitieBeheer.App.Views"
        xmlns:viewModels="clr-namespace:IndraDeMesmaeker.NotitieBeheer.App.ViewModels"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="350" Width="700">
    <Window.Resources>  
        <!--IMAGE BRUSHES FOR ACTION BUTTONS-->
        <ImageBrush x:Key="ImageAdd" ImageSource="/IndraDeMesmaeker.NotitieBeheer.App;component/Resources/Plus-Cropped.png"/>
        <ImageBrush x:Key="ImageRemove" ImageSource="/IndraDeMesmaeker.NotitieBeheer.App;component/Resources/Minus-Cropped.png"/>
        <ImageBrush x:Key="ImageEdit" ImageSource="/IndraDeMesmaeker.NotitieBeheer.App;component/Resources/Edit-Cropped.png"/>
        <ImageBrush x:Key="ImageAddDown" ImageSource="/IndraDeMesmaeker.NotitieBeheer.App;component/Resources/Plus-Down-Cropped.png"/>
        <ImageBrush x:Key="ImageRemoveDown" ImageSource="/IndraDeMesmaeker.NotitieBeheer.App;component/Resources/Minus-Down-Cropped.png"/>
        <ImageBrush x:Key="ImageEditDown" ImageSource="/IndraDeMesmaeker.NotitieBeheer.App;component/Resources/Edit-Down-Cropped.png"/>
        <ImageBrush x:Key="ImageRemoveDisabled" ImageSource="/IndraDeMesmaeker.NotitieBeheer.App;component/Resources/Minus-Disabled-Cropped.png"/>
        <ImageBrush x:Key="ImageEditDisabled" ImageSource="/IndraDeMesmaeker.NotitieBeheer.App;component/Resources/Edit-Disabled-Cropped .png"/>
        <!--STYLES FOR ACTION BUTTONS
            These styles are a workaround for the default hover effect on buttons.
            Also used to define the brushes used per state (regular, down, disabled)-->
        <Style x:Key="ButtonImageAdd" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource ImageAdd}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource ImageAddDown}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonImageRemove" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource ImageRemove}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource ImageRemoveDown}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="{StaticResource ImageRemoveDisabled}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonImageEdit" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource ImageEdit}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource ImageEditDown}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="{StaticResource ImageEditDisabled}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
   <Window.DataContext>
        <viewModels:MainWindowViewModel></viewModels:MainWindowViewModel>
    </Window.DataContext>
        <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="400"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <ContentControl
		    Content="{Binding CurrentListViewModel}"
			Grid.Column="0"
            Grid.Row="0"
            Margin="10,0,0,0"/>
        
        <ContentControl
		    Content="{Binding CurrentDetailViewModel}"
			Grid.Column="2"
            Grid.RowSpan="2"
            Margin="10,0,0,0"/>

        <StackPanel Grid.Column="1">
            <Button Width="40"
                    Margin="0,45,0,0"
                    Height="35"
                    BorderThickness="0"
                    Command="{Binding AddItemCommand}"
                    Style="{StaticResource ButtonImageAdd}"/>
            <Button Width="45" 
                    Margin="0,30,0,0"
                    Height="50"
                    BorderThickness="0"
                    Command="{Binding EditSelectedCommand}"
                    Style="{StaticResource ButtonImageEdit}"/>
            <Button Width="40" 
                    Margin="0,30,0,0"
                    Height="35" 
                    BorderThickness="0"
                    Command="{Binding DeleteSelectedCommand}"
                    Style="{StaticResource ButtonImageRemove}"/>
            
        </StackPanel>

        <Button Grid.Row="1" 
                Width="50"
                Margin="10,0,0,0"
                Content="&lt;"
                HorizontalAlignment="Left"
                Command="{Binding SetCategoriesListViewCommand}"/>
        <Button Grid.Row="1" 
                Width="50" 
                Content=">"
                HorizontalAlignment="Right"
                Command="{Binding SetNotesListViewCommand}"/>

        <TextBlock VerticalAlignment="Bottom"
                   TextWrapping="Wrap"
                   Grid.Row="2"
                   Margin="10,5,0,0"
                   Text="{Binding ListViewMessage}"
                   Foreground="Gray"/>

        <TextBlock VerticalAlignment="Bottom"
                   TextWrapping="Wrap"
                   Grid.Row="2"
                   Grid.Column="2"
                   Margin="10,5,0,0" 
                   Text="{Binding DetailViewMessage}"
                   Foreground="Gray"/>
    </Grid>
</Window>
